from machine import I2C,UART,Pinfrom Sengo2 import *import time# 等待Sengo2完成操作系统的初始化。此等待时间不可去掉，避免出现Sengo2尚未初始化完毕主控器已经开发发送指令的情况time.sleep(2)# 选择UART或者I2C通讯模式，Sengo2出厂默认为I2C模式，短按模式按键可以切换# 4种UART通讯模式：UART9600（标准协议指令），UART57600（标准协议指令），UART115200（标准协议指令），Simple9600（简单协议指令），# 参看“简单协议指令”# https://tosee.readthedocs.io/zh/latest/Common/Protocol/index.html#section-6########################################################################################################## port = UART(2,rx=Pin(16),tx=Pin(17),baudrate=9600)port = I2C(1,scl=Pin(22),sda=Pin(21),freq=400000)# Sengo2通讯地址：0x60。如果I2C总线挂接多个设备，请避免出现地址冲突sengo2 = Sengo2(0x60)err = sengo2.begin(port)print("sengo2.begin: 0x%x"% err) # 1、sengo2可以识别10张交通卡片# 2、算法介绍参考# https://tosee.readthedocs.io/zh/latest/Sentry2/Vision/index.html#chapter-vision-card-index# 3、如需识别自定义的卡片，首先可以尝试集成的深度学习算法；如果效果或者功能不理想，可以购买Sentry2，烧录Sentry2MV固件，自行采集图片训练模型，然后编写python脚本调用模型；# 4、sengo2最多可以同时识别2排4列共8张卡片，一般按照由上向下、由左向右的顺序输出结果信息；# 5、正常使用时，应由主控器发送指令控制Sengo2算法的开启与关闭，而非通过摇杆手动进行操作；# 6、满足特定限制条件下，Sengo2可以并行运行多个识别算法err = sengo2.VisionBegin(sengo2_vision_e.kVisionCard)print("sengo2.VisionBegin(sengo2_vision_e.kVisionCard):0x%x"% err)def Traffic_Card():    global i    if (sengo2.GetValue(sengo2_vision_e.kVisionCard,sentry_obj_info_e.kLabel,i)==sengo2_card_label_e.kCardForward):        print("card%d: Forward   , "%(i), end='')    if (sengo2.GetValue(sengo2_vision_e.kVisionCard,sentry_obj_info_e.kLabel,i)==sengo2_card_label_e.kCardLeft):        print("card%d: Left      , "%(i), end='')    if (sengo2.GetValue(sengo2_vision_e.kVisionCard,sentry_obj_info_e.kLabel,i)==sengo2_card_label_e.kCardRight):        print("card%d: Right     , "%(i), end='')    if (sengo2.GetValue(sengo2_vision_e.kVisionCard,sentry_obj_info_e.kLabel,i)==sengo2_card_label_e.kCardTurnAround):        print("card%d: TurnAround, "%(i), end='')    if (sengo2.GetValue(sengo2_vision_e.kVisionCard,sentry_obj_info_e.kLabel,i)==sengo2_card_label_e.kCardPark):        print("card%d: Park, "%(i), end='')    if ((sengo2.GetValue(sengo2_vision_e.kVisionCard,sentry_obj_info_e.kLabel,i)) == 6):        print("card%d: GreenLight, "%(i), end='')    if ((sengo2.GetValue(sengo2_vision_e.kVisionCard,sentry_obj_info_e.kLabel,i)) == 7):        print("card%d: RedLight  , "%(i), end='')    if ((sengo2.GetValue(sengo2_vision_e.kVisionCard,sentry_obj_info_e.kLabel,i)) == 8):        print("card%d: Speed40   , "%(i), end='')    if ((sengo2.GetValue(sengo2_vision_e.kVisionCard,sentry_obj_info_e.kLabel,i)) == 9):        print("card%d: Speed60   , "%(i), end='')    if ((sengo2.GetValue(sengo2_vision_e.kVisionCard,sentry_obj_info_e.kLabel,i)) == 10):        print("card%d: Speed80   , "%(i), end='')        while True:    # Sengo2不主动返回检测识别结果，需要主控板发送指令进行读取。读取的流程：首先读取识别结果的数量，接收到指令后，Sengo2会刷新结果数据，如果结果数量不为零，那么主控再发送指令读取结果的相关信息。请务必按此流程构建程序。    obj_num = (sengo2.GetValue(sengo2_vision_e.kVisionCard, sentry_obj_info_e.kStatus))    if obj_num:        print("Totally %d cards: "%obj_num)        for i in range(1,obj_num+1):            x = sengo2.GetValue(sengo2_vision_e.kVisionCard, sentry_obj_info_e.kXValue, i)            y = sengo2.GetValue(sengo2_vision_e.kVisionCard, sentry_obj_info_e.kYValue, i)            w = sengo2.GetValue(sengo2_vision_e.kVisionCard, sentry_obj_info_e.kWidthValue, i)            h = sengo2.GetValue(sengo2_vision_e.kVisionCard, sentry_obj_info_e.kHeightValue, i)                        Traffic_Card()            print("x=%d, y=%d, w=%d, h=%d"%(x, y, w, h))                        time.sleep(0.2)            print("\n")